<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
string boolType = "System.Boolean";
string Int32Type = "System.Int32";
string DateTimeType = "System.DateTime";
string StringType = "System.String";
Version requiredMvcVersion = new Version("5.1.0.0");
bool isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion;
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
#>

@{
    ViewBag.Title = "<#= ViewName#>";
    Layout = null;
}

<div class="bjui-pageContent tableContent">
	<div class="bjui-doc">
        @*<h3 class="page-header">页面说明</h3>
        <blockquote>
            <p>提示</p>
        </blockquote>
        <blockquote class="point">
            <p>提示2</p>
        </blockquote>*@
<form action="@Url.Action("Edit")" data-toggle="validate">
    @Html.AntiForgeryToken()
    <table class="table table-bordered table-striped table-condensed table-hover" width="100%">
            <tbody>
<# 
    if (isControlHtmlAttributesSupported) {
#>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<#        
    } else {
#>
        @Html.ValidationSummary(true)
<#      
    }
#>
<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsAssociation) {
        if (property.IsPrimaryKey) {
#>
		 @Html.HiddenFor(model => model.<#= property.PropertyName #>)

<#
        } else if (!property.IsReadOnly) {
#>
        <tr>
            <td>
			@Html.LabelFor(model => model.<#= property.PropertyName #>,  new { @class = "control-label x85", @for="<#= property.PropertyName #>" })
			<#
			if(property.TypeName.Equals(boolType)){
			#>
			<input type="radio" name="<#= property.PropertyName #>" id="<#= property.PropertyName #>1" data-toggle="icheck" value="true" data-rule="checked" @(Model.<#= property.PropertyName #> ? "checked" : "") data-label="是">
            <input type="radio" name="<#= property.PropertyName #>" id="<#= property.PropertyName #>2" data-toggle="icheck" value="false" @(Model.<#= property.PropertyName #> ? "" : "checked") data-label="否">
			<#
			} else if(property.TypeName.Equals(Int32Type)){
			#>
			<input type="text" name="<#= property.PropertyName #>" id="<#= property.PropertyName #>" value="@Model.<#= property.PropertyName #>" size="5" data-toggle="spinner" data-min="0" data-max="100" data-step="1" data-rule="integer">
			<#
			} else if(property.TypeName.Equals(DateTimeType)){
			#>
			<input type="text" name="<#= property.PropertyName #>" id="<#= property.PropertyName #>" value="@Model.<#= property.PropertyName #>" data-toggle="datepicker"  data-pattern="yyyy-MM-dd HH:mm:ss" data-rule="required;datetime" size="15">
			<#
			} else{
			#>
			<input type="text" name="<#= property.PropertyName #>" id="<#= property.PropertyName #>" value="@Model.<#= property.PropertyName #>" data-rule="required" size="15">
			<#
			}
			#>
            </td>
        </tr>
<#
        }
#>
<#
    }
}
#>
		</tbody>
    </table>
</form>
</div>
</div>
<div class="bjui-pageFooter">
    <ul>
        <li><button type="button" class="btn-close" data-icon="close">取消</button></li>
        <li><button type="submit" class="btn-default" data-icon="save">保存</button></li>
    </ul>
</div>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>